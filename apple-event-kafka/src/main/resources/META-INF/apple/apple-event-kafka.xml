<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- producer -->
    <bean id="eventProducerProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
        		<prop key="serializer.class">kafka.serializer.DefaultEncoder</prop>
        		<prop key="metadata.broker.list">${event.metadata.broker.list}</prop>
        		<prop key="producer.type">async</prop>
    			<prop key="request.required.acks">1</prop>
        		<prop key="partitioner.class">com.appleframework.jms.kafka.partitions.SimplePartitioner</prop>
				<prop key="key.serializer.class">kafka.serializer.StringEncoder</prop>
            </props>
        </property>
    </bean>
    
    <bean id="eventProducerConfig" class="kafka.producer.ProducerConfig">
		<constructor-arg index="0" ref="eventProducerProperties" />
	</bean>
    
	<bean id="eventProducer" class="kafka.javaapi.producer.Producer">
		<constructor-arg index="0" ref="eventProducerConfig" />
	</bean>
	
	<bean id="eventMessageProducer" class="com.appleframework.jms.kafka.producer.KafkaMessageProducer3">
		<property name="producer" ref="eventProducer" />
	</bean>
	
	<bean class="com.appleframework.event.EventPublisher">
		<property name="messageProducer" ref="eventMessageProducer" />
		<property name="topic" value="${application.name}" />
	</bean>
	
	<!-- consumer -->
	<bean id="eventConsumerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="zookeeper.connect">${event.zookeeper.connect}</prop>
				<prop key="zookeeper.connection.timeout.ms">15000</prop>
				<prop key="zookeeper.session.timeout.ms">15000</prop>
				<prop key="group.id">${application.name}</prop>
				<prop key="auto.commit.interval.ms">${auto.commit.interval.ms:60000}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset:largest}</prop>
			</props>
		</property>
	</bean>

	<bean id="eventConsumerConfig" class="kafka.consumer.ConsumerConfig">
		<constructor-arg index="0" ref="eventConsumerProperties" />
	</bean>
	
	<bean id="eventListener" class="com.appleframework.event.EventListener"
		init-method="init" destroy-method="destroy">
		<property name="consumerConfig" ref="eventConsumerConfig" />
		<property name="topic" value="${application.name}" /> 
		<property name="partitionsNum" value="${event.consumer.partitionsNum:16}" />
	</bean>
	
	
	<bean id="eventMulticaster" class="com.appleframework.event.EventMulticaster"
		 destroy-method="destroy">
	</bean>
	
	
</beans>